name: trivy scans images built from a docker-compose file

on:
  [push, pull_request, workflow_dispatch]

env: 
  image_refs: ''
  images_tar_path: '/tmp/output_images.tar'

jobs:
  build-and-get-name:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./examples/docker-compose 
    outputs:
      image_names: ${{ steps.get_names.outputs.image_names }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build docker image
        # working-directory: ./examples/docker-compose 
        run:
          docker compose build
      - name: Tarball the images
        run: |
          docker save $(docker compose convert --images) > $images_tar_path 
          # less $images_tar_path
      - name: Get Docker image names
        id: get_names
        run: |
          echo "Docker images to scan: "
          if [ -z $image_refs ]; then
          #   docker compose convert --images | tee image_names.txt
          # else
          #   echo $image_ref | tr ';' '\n' | tee image_names.txt 
            # echo image_names=($(echo $(docker compose convert --images) | tr '\n' ' ')) | tee $GITHUB_OUTPUT
            image_names_yq=$(docker compose convert --images)
            echo $image_names_yq
            image_names=($(echo $image_names_yq | tr '\n' ' '))
            echo "image_names: ${image_names[*]}"
            # echo image_names=${image_names[*]} >> $GITHUB_OUTPUT
            # echo image_names="{\"image\":[\"docker-compose-web\", \"docker-compose-db\"]}"  >> $GITHUB_OUTPUT
            image_json_string='{\"image\": ['
            # Loop over the elements in the array
            for image_name in "${image_names[@]}"; do
                # Add each image name to the JSON string
                image_json_string+='\"'$image_name'\",'
            done
            # Remove the trailing comma and add the closing square bracket and curly braces
            image_json_string=${image_json_string::-1}']}'

            echo image_json_string=$image_json_string | tee $GITHUB_OUTPUT
          fi
      - name: Upload the tarball of docker images
        uses: actions/upload-artifact@v3
        with:
          name: images.tar
          path: ${{ env.images_tar_path }}

  trivy-scan:
    needs: build-and-get-name
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-and-get-name.outputs.image_json_string) }}
    steps:
      - name: Downdload the tarball of docker images
        uses: actions/download-artifact@v3
        with:
          name: images.tar
          path: /tmp/
      - name: Load Docker images
        run: |
          ls /tmp/
          docker load < $images_tar_path ## /tmp/images.tar
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.image }}
          exit-code: 0
          ignore-unfixed: true
          vuln-type: 'os,library'
          format: table
          severity: 'CRITICAL,HIGH'